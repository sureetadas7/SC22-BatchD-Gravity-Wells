{"args":["--to","cocalc-html"],"start":1660922745932,"state":"done","time":1660922746731,"type":"nbconvert"}
{"backend_state":"running","connection_file":"/projects/e07d40f5-5cfc-4265-a995-712ecb653936/.local/share/jupyter/runtime/kernel-d0eb1e8b-80ea-4c0b-b0b5-604332de132d.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1660922626155,"exec_count":1,"id":"5d41cb","input":"# Import libraries\nimport pandas as pd\nimport numpy as np\nimport plotly.express as px\nfrom plotly.subplots import make_subplots\nimport plotly.graph_objects as go\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.ensemble import RandomForestClassifier\n\nfrom sklearn.svm import LinearSVC\nfrom sklearn.metrics import accuracy_score\nfrom sklearn import metrics\nimport matplotlib.pyplot as plt","kernel":"ds_env","no_halt":true,"pos":1,"scrolled":false,"start":1660922624626,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922627133,"exec_count":2,"id":"d8b5e8","input":"# Load data\ndf = pd.read_csv('../datasets/heart_fixed.csv')\ndf_num = pd.read_csv('../datasets/health_numerical.csv')","kernel":"ds_env","no_halt":true,"pos":3,"scrolled":false,"start":1660922626170,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922627652,"exec_count":3,"id":"78acad","input":"df.info()","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 319795 entries, 0 to 319794\nData columns (total 18 columns):\n #   Column            Non-Null Count   Dtype  \n---  ------            --------------   -----  \n 0   HeartDisease      319795 non-null  object \n 1   BMI               319795 non-null  float64\n 2   Smoking           319795 non-null  object \n 3   AlcoholDrinking   319795 non-null  object \n 4   Stroke            319795 non-null  object \n 5   PhysicalHealth    319795 non-null  float64\n 6   MentalHealth      319795 non-null  float64\n 7   DiffWalking       319795 non-null  object \n 8   Sex               319795 non-null  object \n 9   AgeCategory       319795 non-null  object \n 10  Race              319795 non-null  object \n 11  Diabetic          319795 non-null  object \n 12  PhysicalActivity  319795 non-null  object \n 13  GenHealth         319795 non-null  object \n 14  SleepTime         319795 non-null  float64\n 15  Asthma            319795 non-null  object \n 16  KidneyDisease     319795 non-null  object \n 17  SkinCancer        319795 non-null  object \ndtypes: float64(4), object(14)\nmemory usage: 43.9+ MB\n"}},"pos":4,"scrolled":false,"start":1660922627149,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922628181,"exec_count":4,"id":"a6cacf","input":"fig = px.imshow(df_num.corr(), title='Correlation Heatmap', height=600)\nfig.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"f0f95136923a65ebf2f6bd8bf40bf431cbfcd3ac"}}},"pos":7,"scrolled":false,"start":1660922627660,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922630107,"exec_count":5,"id":"72508c","input":"df['HeartDisease_tmp'] = df['HeartDisease'].apply(lambda x: 1 if x == 'Yes' else 0)\nfig6 = px.histogram(df,x=\"DiffWalking\",y=\"HeartDisease_tmp\",histfunc='avg',title='Chance of Heart Disease for People With and Without Difficulties Walking').update_layout(xaxis_title=\"Difficulty Walking\", yaxis_title=\"Chance of Having HD\")\nfig6.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"a370fe671142181ef95fd3b21603dd8161d46d46"}}},"pos":10,"scrolled":false,"start":1660922628189,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922632554,"exec_count":6,"id":"81dcdf","input":"fig1 = px.violin(\n    df,\n    y=\"AgeCategory\",\n    x=\"HeartDisease\",\n    title='Age Distribution of People With and Without Heart Disease',\n    box=True)\nfig1.update_yaxes(categoryorder='category ascending').update_layout(\n    xaxis_title=\"Heart Disease\", yaxis_title=\"Age Category\")\nfig1.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"c3636656f39388f6d5f418736c050421f9dcb6ee"}}},"pos":13,"scrolled":false,"start":1660922630197,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922634501,"exec_count":7,"id":"b8f1b7","input":"fig2 = px.violin(df,y=\"BMI\", x=\"HeartDisease\", title='BMI Distribution of People With and Without Heart Disease', box=True).update_layout(xaxis_title=\"Heart Disease\", yaxis_title=\"BMI\")\nfig2.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"839ff14b489f40066c8585aa36759d36be5f5440"}}},"pos":15,"scrolled":false,"start":1660922632584,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922638998,"exec_count":8,"id":"7ba5cb","input":"import warnings\nwarnings.simplefilter(action='ignore', category=FutureWarning)\n\ndf2 = pd.DataFrame({\n    'Smoking': df['Smoking'].apply(lambda x: 'Smoking' if x == 'Yes' else 'No Smoking'),\n    'AlcoholDrinking': df['AlcoholDrinking'].apply(lambda x: 'Drinking' if x == 'Yes' else 'No Drinking'),\n    'HeartDisease': df['HeartDisease'].apply(lambda x: 'HD' if x == 'Yes' else 'No HD')\n})\nfig5 = px.sunburst(df2, path=['Smoking', 'AlcoholDrinking', 'HeartDisease'], title='Effects of Drinking and Smoking on Likelihood of Developing Heart Disease')\nfig5.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"data":{"iframe":"6a05e7ca6be892abdfd2ba7d200cb046a896e640"}}},"pos":17,"scrolled":false,"start":1660922634558,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922643787,"exec_count":9,"id":"9a5ddf","input":"from sklearn.exceptions import ConvergenceWarning\nwarnings.simplefilter(action='ignore', category=ConvergenceWarning)\n\ndf1 = df_num[df_num['HeartDisease']==1]\ndf0 = df_num[df_num['HeartDisease']==0].sample(n=len(df1))\ndf_ml = pd.concat([df1,df0],axis=0)\n\nX = df_ml.drop(['HeartDisease', 'Race'], axis=1)\ny = df_ml['HeartDisease']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)\n\nmodel = LinearSVC()\nmodel.fit(X_train, y_train)\ny_hat = model.predict(X_test)\nprint(f'SVC Accuracy: {accuracy_score(y_test, y_hat)}')\n\nprint('\\nConfusion Matrix: ')\nconfusion_matrix = metrics.confusion_matrix(y_test, y_hat)\ncm_display = metrics.ConfusionMatrixDisplay(confusion_matrix = confusion_matrix, display_labels = [False, True])\ncm_display.plot()\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"SVC Accuracy: 0.7057534246575342\n\nConfusion Matrix: \n"},"1":{"data":{"image/png":"93db34b8799e7d8192af10cc2483c12389ff27ac","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":20,"scrolled":false,"start":1660922639007,"state":"done","type":"cell"}
{"cell_type":"code","end":1660922658504,"exec_count":10,"id":"c9453e","input":"df1 = df_num[df_num['HeartDisease']==1]\ndf0 = df_num[df_num['HeartDisease']==0].sample(n=len(df1))\ndf_ml = pd.concat([df1,df0],axis=0)\n\nX = df_ml.drop(['HeartDisease', 'Race'], axis=1)\ny = df_ml['HeartDisease']\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)\n\nmodel = RandomForestClassifier(n_estimators=300)\nmodel.fit(X_train, y_train)\ny_hat = model.predict(X_test)\nprint(f'Random Forest Accuracy: {accuracy_score(y_test, y_hat)}')\n\nprint('\\nConfusion Matrix: ')\nconfusion_matrix = metrics.confusion_matrix(y_test, y_hat)\ncm_display = metrics.ConfusionMatrixDisplay(confusion_matrix = confusion_matrix, display_labels = [False, True])\ncm_display.plot()\nplt.show()","kernel":"ds_env","no_halt":true,"output":{"0":{"name":"stdout","text":"Random Forest Accuracy: 0.7431050228310502\n\nConfusion Matrix: \n"},"1":{"data":{"image/png":"8c781927b0ab160aa367e003e5e706d479b4ccaf","text/plain":"<Figure size 432x288 with 2 Axes>"},"metadata":{"needs_background":"light"}}},"pos":22,"scrolled":false,"start":1660922643796,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"034136","input":"## Exploratory Data Analysis \\(EDA\\) & Visualizations\n\n---\n\n","pos":5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0d6442","input":"---\n\n## Conclusion\n\n","pos":23,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"0e9e63","input":"### Interpretation of Correlation Map\n\nAbove is a heat map of the correlation strength between different variables in our dataset. In this heat map, a value of 0 means no correlation, while positive values mean positive correlation, with a larger value corresponding to stronger correlation. Negative values indicate negative correlation, in the same manner as positive values represent positive correlation.\n\nThis chart is useful for exploring data, as it allows us to see a high level representation of the relationships between all variables in an easily digestible manner.\n\nOne point of interest we noticed is the correlation between the \"PhysicalHealth\" and \"DiffWalking\" columns. This makes sense because \"PhysicalHealth\" represents how much a person has been thinking about their physical health, which we would assume would go up if they have difficulty walking.\n\n","pos":7.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"2059b3","input":"### Random Forest Classification\n\nA random forest is comprised of many decision trees. A decision tree contains many decision points. When a data point is input, it goes through a series of decisions, where the final one determines the class of the input. When an input is given to the random forest classifier, it is passed through each of the decision trees, which will in turn vote on the model's prediction based on their own predictions.\n\n","pos":21,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"407bfb","input":"# Team Gravity Wells\n\n1\\-Week Data Science Course\n\n","pos":0,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"5779c9","input":"### Interpretation of BMI Violin Plot\n\nThe two violin plots above show the BMI distributions of people with and without HD. Based on the dataset, the median person with heart disease has a similar BMI compared with the median person without heart disease. Additionally, the interquartile range \\(IQR\\) of both violin\\-box plots is similar \\(e.g. for people without HD, the IQR=31.32\\-23.89=7.43; for people with HD, the IQR=32.69\\-25.06=7.62\\). These interpretations suggest that BMI itself is not a good indicator of HD. \n\n","pos":16,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"62cc61","input":"## Dataset Overview\n\nDataset: [https://www.kaggle.com/datasets/kamilpytlak/personal\\-key\\-indicators\\-of\\-heart\\-disease](https://www.kaggle.com/datasets/kamilpytlak/personal-key-indicators-of-heart-disease)\n\nThis dataset consists of data collected from \"2020 annual CDC survey data of 400k adults related to their health status\" on the data science website Kaggle. More specifically, we analyzed the submitted data of 319,795 people. The participants of this survey were asked questions about their heart disease status, BMI, smoking status, etc. \\(see below for all 18 variables: 9 booleans, 5 strings, and 4 decimals\\). \n\nUsing this dataset, we hypothesized that one's daily habits are a strong predictive factor in whether or not one has heart disease \\(HD\\).\n\nTo Perform machine learning, we also converted many non\\-numeric columns \\(i.e. booleans and strings\\) in\nto numeric representations.\n\n","pos":2,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"704324","input":"### Interpretation of Sunburst Chart\n\nThis sunburst chart shows a breakdown of the smoking and drinking habits of the participants of the survey as well as whether or not they have HD. Observing the outer ring of the chart, we see that there are four main groups of people: those who only smoke, those who only drink, those who smoke and drink, and those who neither drink nor smoke. Of those who only smoke, 12.8% have HD. Of those who only drink, 3% have HD. Of those who smoke and drink, 6.6% have HD. For those who neither smoke nor drink \\(control group\\), 6.2% have HD. These results suggest that smoking may increase one's chance of getting HD while drinking may actually decrease one's chance of getting HD. However, past medical research has proven the negative effects of drinking on heart health, so this could also be an issue\ncaused by\nthe method with which the data was collected. In addition, the number of people who drink in this dataset was highly imbalanced w\nhich could have contributed to this issue.\n\n---\n\n","pos":17.5,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"a6f1c3","input":"### Interpretation of Age Violin plot\n\nAbove is a violin plot showcasing the age distribution amongst people with and without heart disease. At a given Y value, the greater the width of the violin plot, the more data points \\(samples\\) are present at that value. The box plot within these graphs also represents the median age amongst the yes or no categories and the overall range of the ages of people with and without heart disease. \n\nThis is useful, as it compares the distributions of people who do and do not have heart disease among the various age categories. \n\nFor example, we can see that from the people who answered yes for heart disease, most of them fall within the \"80 or older\" age category. Further, we inferred that most likely the people in the 80 or above category developed this health issue in their senior years. Also, we can see that there is a higher IQR \\(interquartile range\\) for the \"no\" values, which indicates there is a greater distribution among the values. Whereas, the IQR for the \"yes\" values is less, therefore indicating that the distribution of \"yes's\" is mostly among the senior age category.\n\n","pos":14,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"b58401","input":"### Interpretation of Histogram\n\nAbove is a bar graph that shows how \"DiffWalking\" could have a direct relationship with the chance of having HD. This graph helps us, as the interpreter, understand how different signs could indicate that the person might have heart disease. This clearly shows how many people who answered \"yes\" for heart disease had difficulty walking. With this, we inferred that difficulty walking could be a sign of malfunctions with the cardiovascular system.\n\nHowever, this relationship likely goes 2 ways, as people with difficulty walking likely get less exercise, which could lead to the development or progression of heart disease. On the other hand, people who already have heart \ndisease could also develop difficulties walking as a result of the disease.\n\n","pos":12,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"bd6e0c","input":"We looked at a dataset consisting of personal key indicators of heart disease \\(HD\\). After manipulating our data so that it was wholly numerical, we created visuals and machine learning \\(ML\\) models to analyze and interpret it. We hypothesized that one's habits, age, health condition\\(s\\), and BMI are good indicators of one's chance of developing HD. \n\nFrom our data, we concluded that many of the factors listed above can result in \\(or suggest\\) heart disease. For example, The histogram we looked at earlier appeared to have shown that many people who had heart disease had difficulty walking. According to the sunburst chart, smoking may also have a direct impact on the chance of getting heart disease. From the correlation map and violin plot, we could conclude that heart disease typically develops in the later stages of a person’s life. \n\nFurthermore, we discovered factors that may not directly have an effect on heart disease, like BMI, according to another violin plot. We found potential problems with the data; the sunburst chart indicated that alcohol drinking decreases the chances of developing HD, although this has been disproved by previous research conducted by scientists which suggests that there may have been some errors in the method of collecting our dataset. In summary, the dataset allowed us to test possible hypotheses and find problems within them.\n\nAfter our preliminary EDA, we then created ML models of our data to predict whether or not someone has HD based on an input of their conditions; specifically, we created a random forest model and a linear single vector classifier model. After balancing our data, we used confusion matrices to analyze their results and confirmed that these models can make relatively accurate predictions about HD.\n\nBased on our work, we concluded that although our hypotheses were mostly correct, some factors which we initially thought would be strong indicators of heart disease did not have the expected relationship. However, we did find that age and smoking were leading factors in the development of heart disease.\n\n","pos":24,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"bfbe6c","input":"## Machine Learning\n\nTo further explore our data, as well as learn additional skills, we chose to perform some machine learning on our dataset. As previously mentioned, we cleaned the dataset and converted all the values\nto numeric types so we could easily apply the methods listed below. To do this, we used the SKLearn Python library which has a robust pre\\-built machine learning pipeline.\n","pos":18,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"c2df07","input":"### Support Vector Classifier \\(SVC\\)\n\nThe SVC model is an implementation of a support vector machine \\(SVM\\). In this model, a boundary plane is fit to the data, and when a predictions is generated, the output is determined by which side of the boundary plane the input is on.\n\n","pos":19,"state":"done","type":"cell"}
{"id":"81ddca","input":"","pos":25,"type":"cell"}
{"id":0,"time":1660919003485,"type":"user"}
{"last_load":1660919002633,"type":"file"}